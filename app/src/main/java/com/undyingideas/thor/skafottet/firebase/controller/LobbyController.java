package com.undyingideas.thor.skafottet.firebase.controller;

import com.firebase.client.ChildEventListener;
import com.firebase.client.Firebase;
import com.undyingideas.thor.skafottet.firebase.DTO.LobbyDTO;
import com.undyingideas.thor.skafottet.firebase.DTO.LobbyPlayerStatus;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.Map;

/**
 * Created by theis on 05-01-2016.
 */
public class LobbyController {

    Firebase ref;
    Firebase lobbyRef;
    final MultiplayerController mpcRef;
    HashMap<String, ChildEventListener> listeners = new HashMap<>();

    public LobbyController(final MultiplayerController mp, final Firebase ref){
        this.ref = ref;
        lobbyRef = ref.child("MultiPlayer").child("Lobby");
        this.mpcRef = mp;
    }

    public void createLobby( LobbyDTO lobbyDTO){

        //This genetates uniqe ID in firebase
        final Firebase newPostRef = lobbyRef.push();

        //Putting the player object into a hashmap with "player" key.

        // TODO : Replace with SparseArray if possible
        //final Map<String, LobbyDTO> post1 = new HashMap<>();
        //post1.put("Lobby", lobbyDTO);
        newPostRef.setValue(lobbyDTO);

        // Get the unique ID generated by push()
        final String postId = newPostRef.getKey();
        for(LobbyPlayerStatus s : lobbyDTO.getPlayerList()) {
            ref.child("MultiPlayer").child("Players").child(s.getName()).child("gameList").push().setValue(postId);
        }
    }

    public void addLobbyListener(String key) {
        listeners.put(key, new LobbyListener(mpcRef));
        ref.child("MultiPlayer").child("Lobby").child(key).addChildEventListener(listeners.get(key));
    }

    public void removeLobbyListener(String key) {
        ref.child("MultiPlayer").child("Lobby").child(key).removeEventListener(listeners.remove(key));
    }
}
