package com.undyingideas.thor.skafottet;

import android.webkit.WebView;

import com.firebase.client.DataSnapshot;
import com.firebase.client.Firebase;
import com.firebase.client.FirebaseError;
import com.firebase.client.Query;
import com.firebase.client.ValueEventListener;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.LinkedList;
import java.util.List;
import java.util.Map;

/**
 * Created by Gump on 04-01-2016.
 */
public class HighScoreController {

    ArrayList<PlayerScore> players;
    Firebase ref;
    int limit;
    WebView i;

    public HighScoreController(Firebase firebaseRef, int limit, ArrayList<PlayerScore> list, WebView i){
        //Setting up reference to firebase.
        this.limit = limit;
        this.ref = firebaseRef;
        this.players = list;
        this.i = i;
        ref = new Firebase("https://hangmandtu.firebaseio.com/");
        //Query orders
//        Query query = ref.orderByValue().limitToFirst(limit);
//        query.addValueEventListener(new fireBaseValueEventListener());
        players.add(new PlayerScore("Sam Wise",10));
        ref.addValueEventListener(new fireBaseEventListener());

    }

    //Method creates a new Highscore, currently does not update i player exists.
    public void createHighScore(PlayerScore p){
        Firebase postRef = ref;
        //This genetates uniqe ID in firebase
        Firebase newPostRef = postRef.push();

        //Putting the player object into a hashmap with "player" key.


        Map<String, PlayerScore> post1 = new HashMap<String, PlayerScore>();
        post1.put("playerscore", p);
        newPostRef.setValue(post1);

        // Get the unique ID generated by push()
        String postId = newPostRef.getKey();


    }


    class fireBaseEventListener implements ValueEventListener {

        @Override
        public void onDataChange(DataSnapshot snapshot) {
            players.add(new PlayerScore("Sam Damn wise",10));

            for(DataSnapshot shot : snapshot.getChildren()) {
                for (DataSnapshot s : shot.getChildren()) {
                    PlayerScore p = s.getValue(PlayerScore.class);

                    players.add(p);
                }
            }
            String highscoreText="";
            for(PlayerScore p : players){
                highscoreText = highscoreText + wrap(p.toString());
            }



            String test = "<html><body><ol>" +
                    highscoreText +
                    "</ol></body></html>" ;

            i.loadData(test, "text/html; charset=UTF-8", null);
        }

        @Override
        public void onCancelled(FirebaseError firebaseError) {

        }
    }
    private String wrap(String text){
        return "<li>"+text+"</li>";
    }



}
