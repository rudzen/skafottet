(+ = new, - = removed, * = change, ! = fix, / = subitem)

v2016.0.3 - 17-07-2016, rudz
----------------------------
[Generic]
* Updated Build-Tools and SDK -> 24
* Updated several libraries used, to newer version(s).
* Minor optimizations.
! Several potential crashes.

[Score system]
! Reduced overhead for date/time.
! Better (and faster) sorting.

--- VERION NUMBERING IS RESET!! ---
v2016.0.2 - 31-01-2016, rudz
----------------------------
[Score system]
+ New Score system algorithm which integrates current with a time modifier.
* Scores for multiplayer games are determined by each player's local Score.
  / The point difference is added to the winner.
  / The point difference is subtracted from the looser.
* When setting a new highscore in singleplayer and not logged in with user, the regular single player name is used.
[Firebase]
+ Observer structure for firebase information listening with GC kindness.
  / If any interface called to doesn't exists, nothing happends.
+ Completely re-wrote all firebase code to better utilize the new information structure.
* Re-worked firebase database structure for higher flexibility and better performance.
+ Firebase basic annonymous login as standard, this is now required to be able to:
  / Use firebase word lists.
  / View online highscores.
! Improved performance and reduced network stress for data retreival through firebase ALOT.
+ Online highscore listing.
+ Login / Create user system added :
  / Uses Firebase password login system.
  / Low memory footprint (< 5 bytes) login-detection structure.
  / When a new user is signed up, the user gets an email with the password.
  / The user then has to (within 24 hours) change that password.
  / Option added in preferences to keep last used password in app,
    and to use it to log in with the next time the application starts.
  / Preparation is made for the ability to utilize google account sign in.
* Only the relevant locations in the application applies firebase data listeners for their objectives.
  / Earlier, the whole firebase database was downloaded on application start.
[Game]
+ When playing a multiplayer game, the mScore of the opponents game is shown.
* Highscore viewing is now more flexible, with navigation drawer for more stuff to do !!!
! Improved sound playback performance by switching to ogg file format.
[Code general]
! Improved basic structure of activities which helps to facilitate firebase support.
* The last remnants of the PlayerActivities and it's ascosiates are now pure fragments integrated into existing system.
! Reduced memory usage a little.
! Improved internal structure by applying the use of parcels more logically instead of global objects (use where/when needed principle).
+ More encaplusement.


----------------------------------------------------------------------------------------------------------


v1.1.3 - 28.01.2016, rudz
-------------------------
+ Basic local highscore (10 rankings). Players name/mScore/word/mDate is kept.
+ Added highscore view to end-game fragment.
+ Local player name can be set through preferences, with summary set for current name.
+ More strings extracted (for future translations).
+ Updated help file a bit to reflect current game and added info about resetting preferences.
! Dialogs are now immersive.
* Improved preferences.
* Updated adapters to use AutoScaleTextView where appropriate.

v1.1.2d - 26.01.2016, rudz
--------------------------
+ It's now possible to set the colour theme of the game through preferences,
  the text colour is adjusted to white or black depending on the brightness of the selected theme colour.
* Graphical buttons replaced by shape/gradient drawable.
* Removed a lot of old not-needed files, about Â½mb smaller in size.
* End game fragment structure adjusted to better fit new colouring of buttons.
* The robe colour in the 3d model will not turn black or white, but grey or white depending on main colour.

v1.1.2c - 26.01.2016, rudz
--------------------------
! More deprecated method guards.
* Cleaned up some code
* About fragment updated.

v1.1.2b - 25.01.2016, rudz
--------------------------
! Fixed not getting points for last guess.
! Preferences now works as intended.
! More class metrics issues dealt with.
! More Declaration redundancys.
! Guard added for StarField setRun() to avoid re-creating objects again.
* SoundPool now operates Builder (API 21+), and old constructor for < 21
* Improved internet connection receiver.
* Upgraded some deprecated method usage.
* More static helper objects encaplulated.

v1.1.2 - 24.01.2016, rudz
-------------------------
+ Preferences enabled for :
    - StarField on/off.
    - SoundFX on/off.
    - Music on/off.
    - Wrong guess vibration on/off.
+ Point system, +500 for each letter correctly guessed, -100 for wrong guess.
! Fixed game state icon in new game list popup.
! Fixed Kitkat (API 19) crash on list saving.
! StarField had wrong base comparison for HIGH_PASS_FILTER
! End game message depending on perfect result.
! Playing end app sound effect when entering highscore activity
! Memory leak en menufragment
! Reduced memory use in menu fragment a bit
! Fixed potential thread chaos in StarField.
* Updated game play layout to better fit game with points :).
* Reduced coupling for some firebase utility functions.
* Minor cleanup
* WIP for Daydream
* Minor various code style and performance issues fixes
* MusicPlay service intent moved out of MusicPlay.
* StarField now handles preferences changes correctly.
* Star base weight added depending on their fade speed.


v1.1.1 - 24.01.2016, rudz
-------------------------
+ WordList view updated.
+ Firebase re-work startet, added a few base classes (not active yet).
+ Added NumberHelper utility class.
! Add word list dialog used memory for callback when not needed.
! Exiting app not working as intended.
! Fixed un-intentional overdraw of background.
! Cleaned up a few loose ends and old commented out code.
! Fixed a few code style issues.
* WordListActivity converted to fragment.
* BackButton pressing is now handled entirely by the activity as all backs leads to menu.
* Re-worked help file DTO to be simpler and easier to use with firebase.
* Star2D now rounds it's fade value for higher precision.

v1.1 - 23.01.2016, rudz
-----------------------
+ Fragment based menu, makes things easier.
+ Fragment handling of backbutton through helper class.
+ Mode set by interface back to activity.
+ Generic mode Fragment flipper interface.
+ Sound effects bug fix (would cause IllegalState + perhaps kill sound effects).
+ Sound effects added for single fragment back press towards menu.
+ Sound effect added when quiting game.
+ Groovy About fragment fade-in.
! Empty Wordlist selection could cause wordlist curroption if selected while starting new game,
  this would require user to delete application data to make it work again.
! Login listener didn't really work, replaced with observer handling.
! Fixed several multiplayer related menu / selection crashes.
! SoundThread should be more operational during stop/resume stuff.
* Slight refactoring of some helper classes.
* SoundPool now only used through GameActivity, was used by two different activities before.
* All old fragments updated with correct implementation of overrides.
* All added/altered fragments classes has their methods sorted into categories :
  / Overrides.
  / Helper methods.
  / Helper classes.
* StarField is now a RelativeLayout (increases performance ALOT).
* Removed old background layout in menu (replaced by StarField).
* StarField now uses HIGH_PASS_FILTER of 3.0 to limit movement.
* StarField calculation PS lowered.
* StarField movement altered slightly to make it look more pleasing.
* Moved some generic views to be global (they are used in a lot of places).
* Added a few more generic helper methods to reduce size of some fragments.
* Implementet WeakReferenceHolder for more classes.
* End game fragment now has a delay for being able to click the buttons.
* Adjusted animation of end game fragment a little.
* End game fragment now uses threading to determin the results from the game (more UI friendly).
